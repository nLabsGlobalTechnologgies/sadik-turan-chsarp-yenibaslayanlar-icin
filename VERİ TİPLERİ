        //Degişkenler
        //byte sayi1 = 255;
        //short sayi2 = 500;
        //int sayi3 = 3000;
        //long sayi4 = 1000000;
        //float sayi5 = 2.5f;
        //double sayi6 = 12.5;
        //decimal sayi7 = 125.56m;
        //char character = 'A';
        //bool isOk = true;
        //string adsoyad = "Cuma KÖSE";
        //Console.WriteLine(sayi1);
        //Console.WriteLine(sayi2);
        //Console.WriteLine(sayi3);
        //Console.WriteLine(sayi4);
        //Console.WriteLine(sayi5);
        //Console.WriteLine(sayi6);
        //Console.WriteLine(sayi7);
        //Console.WriteLine(character);
        //Console.WriteLine(isOk);
        //Console.WriteLine(adsoyad);

        // Kilo bilgisi tutulacak bir degişken (byte, short, int, long)
        //byte kilo = 100;
        // Araç KM bilgisini tutacak bir degişken
        //int aracKm = 1000000;
        // Müşteri ID bilgisini tutacak bir degişken
        //long musteriId = 1000000000;
        // Bir ürünün satışta mı degilmi bilgisini tutacak bir degişken
        //bool satis = true;
        // Maaş bilgisini tutacak bir degişken
        //decimal maas = 3000.56m;
        // Ögrenci bilgisini tutacak bir degişken
        //string adSoyad = "Ali Kocabaş";
        // Şube kodunu tutacak bir degişken(Örnegin : A)
        //char subeKod = 'A';

        //Console.WriteLine(kilo);
        //Console.WriteLine(aracKm);
        //Console.WriteLine(musteriId);
        //Console.WriteLine(satis);
        //Console.WriteLine(maas);
        //Console.WriteLine(adSoyad);
        //Console.WriteLine(subeKod);


        //Type Conversion(Tür Dönüşümleri)
        // 1 Implicit type conversion (Bilinçsiz tür dönüşümleri)
        //burada önemli olan küçük veri büyük veriye sorunsuz dönüşebilir bir netlik belirtmeye yani örnek olarak (int)a gibi belirtmeye gerek yoktur
        //byte byteVeri = 255;
        //int intVeri = byteVeri;
        //Console.WriteLine(intVeri);

        // 2 Explicit type conversion (Bilinçli tür dönüşümleri)
        //burada önemli olan büyük veri küçük veriye dönüşürken veri kaybı olabilir bunu bilerek yapmamız gerekir aksi halde veri kaybına neden olacaktır
        //örnek olarak dönüştürecegimiz veriden fazla olursa kayıplar olacak
        //lakin burada tip belirtmemiz gerekir örnek olarak byte sayi2=(byte)sayi1; şeklinde hangi türe dönüştüreceksek belirtmemiz gerekmektedir
        Console.WriteLine("-------------------------------");
        short sayi1 = 2000;
        byte sayi2 = (byte)sayi1;
        Console.WriteLine(sayi2);
        // aşagıda ise veri sorunsuz aktarılır çünkü büyük veride saklı deger aslında küçük verinin kapasitesini aşmamaktadır. başarılı dönüşüm gerçekleşir
        int iVeri = 5;
        byte bVeri = (byte)iVeri;
        Console.WriteLine(bVeri);

        //Convert() ve Parse() (Uyumsuz tip Dönüşümü)
        // burada tip dönüşümü int.Parse yada Convert.ToInt16 yada Convert.ToInt32 veya Convert.ToInt64 olarak dönüştürürüz 16 yani short veriye 32 olunca ise int veriye 64 olunca ise long veriye dönüştürürüz
        Console.WriteLine("-----------------------------------");
        string stringVeri = "5";
        //int inVeri = int.Parse(stringVeri); // burada Parse işlemi gerçekleşir ama pek kullanımı tercih edilmez genelde Convert metodu uygulanır
        long    longaDonus = Convert.ToInt64(stringVeri);//Long dönüştürme işlemi
        int     inteDonus = Convert.ToInt32(stringVeri);//İnt dönüştürme işlemi
        short   shortaDonus = Convert.ToInt16(stringVeri);//Short dönüştürme işlemi
        byte    byteDonus = byte.Parse(stringVeri);//Byte dönüştürme işlemi

        Console.WriteLine(longaDonus);
        Console.WriteLine(inteDonus);
        Console.WriteLine(shortaDonus);
        Console.WriteLine(byteDonus);



        Console.ReadLine();
